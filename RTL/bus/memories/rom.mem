@000000
37
21
00
00
11
71
b7
07
00
80
a9
64
99
07
9c
c0
@000010
c9
20
29
64
93
07
00
20
1c
c4
b7
07
01
80
93
87
@000020
17
50
9c
c0
b7
04
00
80
21
04
65
20
29
69
93
84
@000030
54
10
23
20
99
00
71
28
1c
40
85
8b
fd
fb
89
64
@000040
01
44
09
69
91
69
93
84
04
e0
13
06
00
02
0c
10
@000050
22
85
79
28
13
06
00
02
8a
85
33
05
24
01
49
28
@000060
13
77
c4
ff
81
47
4e
97
93
06
00
02
0c
10
be
95
@000070
8c
41
33
86
87
00
0c
c2
33
06
f1
00
0c
42
33
06
@000080
f7
00
91
07
0c
c2
e3
93
d7
fe
13
04
04
02
e3
1e
@000090
94
fa
89
64
11
69
13
06
00
02
8a
85
33
05
94
00
@0000a0
81
28
13
77
c4
ff
81
47
4a
97
93
06
00
02
33
06
@0000b0
f1
00
0c
42
33
06
f7
00
91
07
0c
c2
e3
99
d7
fe
@0000c0
13
04
04
02
e3
19
94
fc
37
21
00
00
67
00
01
00
@0000d0
01
45
a9
67
93
87
87
02
05
47
94
43
e3
9f
e6
fe
@0000e0
a9
67
93
87
87
02
05
47
94
43
e3
9f
e6
fe
82
80
@0000f0
93
07
f6
ff
37
27
00
80
41
11
13
07
b7
36
c2
07
@000100
22
c4
26
c2
ba
97
06
c6
29
67
48
c3
29
67
1c
c3
@000110
32
84
ae
84
7d
3f
0d
04
29
67
71
98
81
47
21
07
@000120
63
97
87
00
b2
40
22
44
92
44
41
01
82
80
b3
86
@000130
e7
00
90
42
b3
86
f4
00
91
07
90
c2
d5
b7
00
00
/*

int __attribute__((naked)) main(){
	asm("li x2, 0x1F00");
	s25fl128s_wren();
	s25fl128s_wrr(1<<9);
	while(s25fl128s_rdsr1() & 1){}

	int instr_arr[8], data_arr[8];
	for(int i=0x0000;i<0x1E00; i+=32){
		s25fl128s_qor(i, data_arr, 32);
		s25fl128s_qor(i+0x2000, instr_arr, 32);
		for(int j=0;j<8;j++){
			*(int*)(i+j*4) = data_arr[j];
			instr_mem_write(i/4+j, instr_arr[j]);
		}
	}
	for(int i=0x1E00;i<0x2000; i+=32){
		s25fl128s_qor(i+0x2000, instr_arr, 32);
		for(int j=0;j<8;j++){
			instr_mem_write(i/4+j, instr_arr[j]);
		}
	}
	asm("li x2, 0x2000\n\t"
        "jalr x0, x2, 0");
}
*/